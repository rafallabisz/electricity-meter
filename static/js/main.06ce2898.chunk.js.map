{"version":3,"sources":["App.module.scss","assets/electricity-meter.jpg","assets/background.jpg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","moment","locale","App","props","useState","Date","currentConsumption","setCurrentConsumption","useEffect","timer","setInterval","getRndInteger","clearInterval","min","max","Math","random","className","styles","mainWrap","style","background","Background","Container","Row","Col","src","ElectricityMeterIcon","alt","width","containerData","title","format","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,SAAW,sBAAsB,MAAQ,mBAAmB,cAAgB,6B,mHCD/E,MAA0B,8C,wCCA1B,G,MAAA,IAA0B,wC,OCQzCC,IAAOC,OAAO,MAMd,IAwEeC,EAxEiB,SAACC,GAAW,IAAD,EACpBC,mBAAS,IAAIC,MADO,gCAGUD,mBAAS,MAHnB,mBAGlCE,EAHkC,KAGfC,EAHe,KAKzCC,qBAAU,WAER,IAEMC,EAAQC,aAAY,kBAAKH,EAAsBI,EAFpC,GACA,MACsE,KACtF,OAAO,WACLC,cAAcH,MAEjB,CAACH,IAEH,IAAMK,EAAgB,SAACE,EAAYC,GACjC,OAAOC,KAAKC,UAAYF,EAAMD,EAAM,MAGtC,OACE,sBAAMI,UAAWC,IAAOC,SAAUC,MAAO,CAACC,WAAW,OAAD,OAAQC,EAAR,MAApD,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACJ,0CAAY,oDACZ,8BACE,qBAAKC,IAAKC,EAAsBC,IAAI,qBAAgBC,MAAO,WAG7D,cAACJ,EAAA,EAAD,UAEE,0BAASR,UAAWC,IAAOY,cAA3B,UACA,gCACA,sBAAMb,UAAWC,IAAOa,MAAxB,oBAA4C,yCAAU/B,MAASgC,OAAO,KAA1B,YAAkChC,MAASgC,OAAO,aAG9F,gCACA,sBAAMf,UAAWC,IAAOa,MAAxB,wBAAgD,+DAGhD,gCACA,sBAAMd,UAAWC,IAAOa,MAAxB,yBAAiD,yDAGjD,gCACA,sBAAMd,UAAWC,IAAOa,MAAxB,0BAAkD,oDAGlD,gCACA,sBAAMd,UAAWC,IAAOa,MAAxB,wBAAgD,wDAGhD,gCACA,sBAAMd,UAAWC,IAAOa,MAAxB,qBAA6C,0CAG7C,gCACA,sBAAMd,UAAWC,IAAOa,MAAxB,oCAAuD,yCAAUzB,EAAmB2B,QAAQ,GAArC,kBAEvD,gCACA,sBAAMhB,UAAWC,IAAOa,MAAxB,uDAAqE,oDAErE,gCACA,sBAAMd,UAAWC,IAAOa,MAAxB,wDAAsE,iEC/D/DG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.06ce2898.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"App_mainWrap__3cU5K\",\"title\":\"App_title__2IKHo\",\"containerData\":\"App_containerData__3B-Ea\"};","export default __webpack_public_path__ + \"static/media/electricity-meter.38beccaa.jpg\";","export default __webpack_public_path__ + \"static/media/background.3b070342.jpg\";","import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport ElectricityMeterIcon from './assets/electricity-meter.jpg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './App.module.scss';\nimport moment from \"moment\";\nimport 'moment/locale/pl'\nimport Background from './assets/background.jpg'\nmoment.locale('pl');\n\ninterface AppProps {\n  \n}\n\nconst App: React.FC<AppProps> = (props) => {\n  const [date,setDate]=useState(new Date());\n\n  const [currentConsumption,setCurrentConsumption] = useState(0.85);\n\n  useEffect(()=>{\n      // const timer = setInterval(()=> setDate(new Date()),1000);\n    const minRange = 0.2;\n    const maxRange = 2;\n    const timer = setInterval(()=> setCurrentConsumption(getRndInteger(minRange,maxRange)),1000)\n     return function cleanup(){\n       clearInterval(timer)\n     } \n  },[currentConsumption])\n\n  const getRndInteger = (min:number, max:number) => {\n    return Math.random() * (max - min + 0.01);\n  }\n\n  return (\n    <main className={styles.mainWrap} style={{background:`url(${Background})`}}>\n      <Container>\n        <Row>\n          <Col>\n      <h5>Licznik <b>V705048953698419</b></h5>\n      <div>\n        <img src={ElectricityMeterIcon} alt=\"licznik prądu\" width={300} />\n      </div>\n      </Col>\n      <Col>\n        \n        <section className={styles.containerData}>\n        <div>\n        <span className={styles.title}>Data: </span><span>{`${moment().format('L')} ${moment().format('LTS')}`}</span>\n        </div>\n        \n        <div>\n        <span className={styles.title}>Adres PPE </span><span>00-000 Miasto, ulica 1/2</span>\n        </div>\n        \n        <div>\n        <span className={styles.title}>Sprzedawca </span><span>Energa-Obrót SA</span>\n        </div>\n     \n        <div>\n        <span className={styles.title}>Okres umowy </span><span>Od 2013-01-01</span>\n        </div>\n     \n        <div>\n        <span className={styles.title}>Numer PPE </span><span>PL003700000000009</span>\n        </div>\n     \n        <div>\n        <span className={styles.title}>Taryfa </span><span>G12</span>\n        </div>\n       \n        <div>\n        <span className={styles.title}>Aktualne zużycie </span><span>{`${currentConsumption.toFixed(2)} kWh/doba`}</span>\n        </div>\n        <div>\n        <span className={styles.title}>Minimalne zużycie w ciągu dnia </span><span>{`0.12 kWh/doba`}</span>\n        </div>\n        <div>\n        <span className={styles.title}>Maksymalne zużycie w ciągu dnia </span><span>{`2.15 kWh/doba`}</span>\n        </div>\n        </section>\n      </Col>\n      </Row>\n      </Container>\n    </main>\n  )\n}\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}