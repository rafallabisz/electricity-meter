{"version":3,"sources":["assets/electricity-meter.jpg","App.tsx","reportWebVitals.ts","index.tsx","App.module.scss"],"names":["moment","locale","App","props","useState","Date","setDate","useEffect","timer","setInterval","clearInterval","className","styles","mainWrap","Container","Row","Col","src","ElectricityMeterIcon","alt","width","format","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2MAAe,MAA0B,8C,uDCOzCA,IAAOC,OAAO,MAMd,IA4BeC,EA5BiB,SAACC,GAAW,IAAD,EACpBC,mBAAS,IAAIC,MADO,mBAC7BC,GAD6B,WAUzC,OAPAC,qBAAU,WACN,IAAMC,EAAQC,aAAY,kBAAKH,EAAQ,IAAID,QAAQ,KAEpD,OAAO,WACLK,cAAcF,OAIjB,sBAAMG,UAAWC,IAAOC,SAAxB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACJ,0CAAY,oDACZ,8BACE,qBAAKC,IAAKC,EAAsBC,IAAI,qBAAgBC,MAAO,WAG7D,cAACJ,EAAA,EAAD,UACE,8CAAehB,MAASqB,OAAO,KAA/B,YAAuCrB,MAASqB,OAAO,oBCpBhDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,SAAW,yB","file":"static/js/main.e500a92f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/electricity-meter.38beccaa.jpg\";","import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport ElectricityMeterIcon from './assets/electricity-meter.jpg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './App.module.scss';\nimport moment from \"moment\";\nimport 'moment/locale/pl'\nmoment.locale('pl');\n\ninterface AppProps {\n  \n}\n\nconst App: React.FC<AppProps> = (props) => {\n  const [date,setDate]=useState(new Date());\n\n  useEffect(()=>{\n      const timer = setInterval(()=> setDate(new Date()),1000);\n\n     return function cleanup(){\n       clearInterval(timer)\n     } \n  })\n  return (\n    <main className={styles.mainWrap}>\n      <Container>\n        <Row>\n          <Col>\n      <h5>Licznik <b>V705048953698419</b></h5>\n      <div>\n        <img src={ElectricityMeterIcon} alt=\"licznik prÄ…du\" width={300} />\n      </div>\n      </Col>\n      <Col>\n        <div>{`Data: ${moment().format('L')} ${moment().format('LTS')}`}</div>\n      </Col>\n      </Row>\n      </Container>\n    </main>\n  )\n}\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"App_mainWrap__3cU5K\"};"],"sourceRoot":""}